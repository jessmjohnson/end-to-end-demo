{
	"name": "Telemetry-QS_Snapshot",
	"properties": {
		"content": {
			"query": "SET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\nDROP PROC [Telemetry].[usp_CaptureQS];\nGO\nCREATE PROC Telemetry.usp_CaptureQS\n @PipelineRunId UNIQUEIDENTIFIER,\n  @PipelineName  VARCHAR(100),\n  @CaptureTime   DATETIME2(7)\nAS\nBEGIN\n  SET NOCOUNT ON;\n\n  INSERT INTO Telemetry.QS_Snapshot\n    (PipelineName, PipelineRunId, CaptureTime,\n     QueryId, PlanId,\n     CountExecutions,\n     AvgDuration, LastDuration, MinDuration, MaxDuration,\n     AvgLogicalIoReads, LastLogicalIoReads,\n     AvgLogicalIoWrites, LastLogicalIoWrites\n    )\n  SELECT\n    @PipelineName,\n    @PipelineRunId,\n    @CaptureTime,\n    \n    q.query_id,\n    p.plan_id,\n\n    rs.count_executions,\n    rs.avg_duration,\n    rs.last_duration,\n    rs.min_duration,\n    rs.max_duration,\n\n    rs.avg_logical_io_reads,\n    rs.last_logical_io_reads,\n    rs.avg_logical_io_writes,\n    rs.last_logical_io_writes\n  FROM sys.query_store_runtime_stats AS rs\n  JOIN sys.query_store_plan          AS p\n    ON rs.plan_id  = p.plan_id\n  JOIN sys.query_store_query         AS q\n    ON p.query_id = q.query_id\n  WHERE rs.count_executions > 0;\nEND;\nGO\n\n\nDROP TABLE [Telemetry].[QS_Snapshot]\nGO\n\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE TABLE Telemetry.QS_Snapshot\n(\n  PipelineName         VARCHAR(100)        NULL,\n  PipelineRunId        UNIQUEIDENTIFIER    NOT NULL,\n  CaptureTime          DATETIME2(7)        NOT NULL,\n  QueryId              BIGINT              NOT NULL,\n  PlanId               BIGINT              NOT NULL,\n  CountExecutions      BIGINT              NULL,\n  AvgDuration          BIGINT              NULL,\n  LastDuration         BIGINT              NULL,\n  MinDuration          BIGINT              NULL,\n  MaxDuration          BIGINT              NULL,\n  AvgLogicalIoReads    BIGINT              NULL,\n  LastLogicalIoReads   BIGINT              NULL,\n  AvgLogicalIoWrites   BIGINT              NULL,\n  LastLogicalIoWrites  BIGINT              NULL\n)\nWITH\n(\n\tDISTRIBUTION = HASH ( [QueryId] ),\n\tCLUSTERED COLUMNSTORE INDEX\n);\nGO\n\n-- Then create the clustered columnstore index\n--CREATE CLUSTERED COLUMNSTORE INDEX CCI_QS_Snapshot\n--  ON Telemetry.QS_Snapshot;\n--GO\n/*\nWITH\n(\n\tDISTRIBUTION = HASH ( [QueryId] ),\n\tCLUSTERED COLUMNSTORE INDEX\n)\nGO*/",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "dspendtoenddemo",
				"poolName": "dspendtoenddemo"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}