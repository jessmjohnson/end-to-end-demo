{
	"name": "SQL script 19",
	"properties": {
		"content": {
			"query": "CREATE OR ALTER PROC Gold.usp_PopulateDimDate\nAS\nBEGIN\n    SET NOCOUNT ON;\n\n    DECLARE \n        @StartDate DATE = '19500101',\n        @EndDate   DATE = '20501231',\n        @Days      INT  = DATEDIFF(DAY, @StartDate, @EndDate);\n\n    -- 1) Empty the dimension\n    TRUNCATE TABLE Gold.dimDate;\n\n    -- 2) Build a numbers table on the fly (>= 36,500 rows)\n    WITH\n    E1 AS (SELECT 1 AS n UNION ALL SELECT 1),             -- 2 rows\n    E2 AS (SELECT 1 AS n FROM E1 a CROSS JOIN E1 b),      -- 4 rows\n    E4 AS (SELECT 1 AS n FROM E2 a CROSS JOIN E2 b),      -- 16 rows\n    E8 AS (SELECT 1 AS n FROM E4 a CROSS JOIN E4 b),      -- 256 rows\n    E16 AS (SELECT 1 AS n FROM E8 a CROSS JOIN E8 b),     -- 65,536 rows\n    nums AS (\n      SELECT TOP (@Days + 1)\n        ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) - 1 AS DayOffset\n      FROM E16\n    )\n    -- 3) Bulk insert all dates\n    INSERT INTO Gold.dimDate (\n        DateKey, FullDate, DayOfWeek, DayName,\n        DayOfMonth, DayOfYear, WeekOfYear,\n        MonthOfYear, MonthName, Quarter,\n        QuarterName, [Year], IsWeekend\n    )\n    SELECT\n        -- YYYYMMDD as INT\n        YEAR(d)*10000 + MONTH(d)*100 + DAY(d)            AS DateKey,\n        d                                               AS FullDate,\n        DATEPART(WEEKDAY, d)                            AS DayOfWeek,\n        DATENAME(WEEKDAY, d)                            AS DayName,\n        DAY(d)                                          AS DayOfMonth,\n        DATEPART(DAYOFYEAR, d)                          AS DayOfYear,\n        DATEPART(WEEK, d)                               AS WeekOfYear,\n        MONTH(d)                                        AS MonthOfYear,\n        DATENAME(MONTH, d)                              AS MonthName,\n        DATEPART(QUARTER, d)                            AS Quarter,\n        'Q' + CONVERT(VARCHAR(1), DATEPART(QUARTER, d)) AS QuarterName,\n        YEAR(d)                                         AS [Year],\n        CASE WHEN DATEPART(WEEKDAY, d) IN (1,7) THEN 1 ELSE 0 END\n                                                        AS IsWeekend\n    FROM (\n      SELECT DATEADD(DAY, DayOffset, @StartDate) AS d\n      FROM nums\n    ) AS Calendar;\n\n    -- 4) (Optional) If you still need that 1900‑01‑01 row, just extend @StartDate back to '19000101'\n    --    and skip a manual VALUES() insert altogether.\n    GO\n    INSERT INTO Gold.dimDate\n    (\n        DateKey,\n        FullDate,\n        DayOfWeek,\n        DayName,\n        DayOfMonth,\n        DayOfYear,\n        WeekOfYear,\n        MonthOfYear,\n        MonthName,\n        Quarter,\n        QuarterName,\n        [Year],\n        IsWeekend\n    )\n    VALUES\n    (\n        19000101,            -- DateKey (YYYYMMDD)\n        '1900-01-01',        -- FullDate\n        2,                   -- DayOfWeek (1=Sunday → Monday=2)\n        'Monday',            -- DayName\n        1,                   -- DayOfMonth\n        1,                   -- DayOfYear\n        1,                   -- WeekOfYear\n        1,                   -- MonthOfYear\n        'January',           -- MonthName\n        1,                   -- Quarter\n        'Q1',                -- QuarterName\n        1900,                -- Year\n        0                    -- IsWeekend (0 = weekday)\n    );\n\n\nEND;\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "dspendtoenddemo",
				"poolName": "dspendtoenddemo"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}