{
	"name": "01_Create_Utility_Asset_PipelineLog",
	"properties": {
		"content": {
			"query": "/*****************************************************************************************/\n/** PipelineLog                                                                         **/\n/**     What:   Records ADF pipeline and activity events (start/end), with              **/\n/**             optional stage names, durations, row counts, status and messages        **/\n/**                                                                                     **/\n/**     Why:    Provides an execution timeline to pinpoint slow or failed activities    **/\n/**             and centralizes activity telemetry data for easy querying.              **/\n/*****************************************************************************************/\n\n-------------------------------------------------------------------------------------------\n--  Table Design: Telemetry.PipelineLog \n-------------------------------------------------------------------------------------------\nCREATE TABLE Telemetry.PipelineLog\n(\n  PipelineRunId   UNIQUEIDENTIFIER NOT NULL,\n  PipelineName    VARCHAR(128)     NOT NULL,\n  StageName       VARCHAR(128)     NULL,\n  ActivityName    VARCHAR(128)     NOT NULL,\n  EventType       VARCHAR(50)      NOT NULL,\n  EventTime       DATETIME2        NOT NULL,\n  DurationSec     FLOAT            NULL,\n  RowsAffected    BIGINT           NULL,\n  Status          VARCHAR(50)      NULL,\n  Message         VARCHAR(4000)    NULL\n)\nWITH\n(\n  DISTRIBUTION = HASH(PipelineRunId),\n  CLUSTERED COLUMNSTORE INDEX\n);\n\nALTER TABLE Telemetry.PipelineLog\nADD CONSTRAINT PK_PipelineLog\n  PRIMARY KEY NONCLUSTERED (PipelineRunId, ActivityName, EventType, EventTime)\n  NOT ENFORCED;\nGO;\n\n-------------------------------------------------------------------------------------------\n-- Stored Procedure Design: Telemetry.usp_LogPipelineEvent\n-------------------------------------------------------------------------------------------\nCREATE PROCEDURE Telemetry.usp_LogPipelineEvent\n    @PipelineRunId UNIQUEIDENTIFIER,\n    @PipelineName  VARCHAR(128),\n    @StageName     VARCHAR(128),\n    @ActivityName  VARCHAR(128),\n    @EventType     VARCHAR(50),\n    @EventTime     DATETIME2,\n    @DurationSec   FLOAT,\n    @RowsAffected  BIGINT,\n    @Status        VARCHAR(50),\n    @Message       VARCHAR(4000)\nAS\nBEGIN\n    INSERT INTO Telemetry.PipelineLog (\n        PipelineRunId,PipelineName,StageName,ActivityName,EventType,EventTime,DurationSec,RowsAffected,Status,Message\n    )\n    VALUES (\n        @PipelineRunId,@PipelineName,@StageName,@ActivityName,@EventType,@EventTime,@DurationSec,@RowsAffected,@Status,@Message\n    );\nEND;\nGO;",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "dspendtoenddemo",
				"poolName": "dspendtoenddemo"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}