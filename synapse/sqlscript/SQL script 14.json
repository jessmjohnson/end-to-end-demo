{
	"name": "SQL script 14",
	"properties": {
		"content": {
			"query": "DROP PROCEDURE [Silver].[usp_LoadSquirrelObservations]\nGO\n\nSET ANSI_NULLS ON\nGO\nSET QUOTED_IDENTIFIER ON\nGO\n\nCREATE PROC [Silver].[usp_LoadSquirrelObservations] AS\nBEGIN\n  SET NOCOUNT ON;\n\n  -- 1 a) capture how many rows we're about to truncate\n  DECLARE @RowsDeleted INT = (SELECT COUNT(*) FROM Silver.SquirrelObservations);\n\n  -- 1 b) capture start time\n  DECLARE @StartTime    DATETIME2 = GETDATE();\n\n  -- 2) Clear out old rows\n  TRUNCATE TABLE Silver.SquirrelObservations;\n\n  -- 3) Insert typed data from Bronze\n  INSERT INTO Silver.SquirrelObservations\n    (   AreaName, AreaID, ParkName, ParkID, SquirrelID, PrimaryFurColor, HighlightsInFurColor, ColorNotes, \n        Location, AboveGroundHeight, SpecificLocation, Activities, HumanInteractions, OtherNotesObservations,\n        SquirrelLatitude, SquirrelLongitude, ObservationDate\n    )\nSELECT\n  COALESCE(TRY_CONVERT(VARCHAR(100),       AreaName),                'Unknown Area')    AS AreaName,\n  COALESCE(TRY_CONVERT(CHAR(2),            AreaID),                   '-1')               AS AreaID,  \n  COALESCE(TRY_CONVERT(VARCHAR(100),       ParkName),                'Unknown Park')    AS ParkName,\n  COALESCE(TRY_CONVERT(DECIMAL,                ParkID),                  -1)                 AS ParkID,\n  COALESCE(TRY_CONVERT(CHAR(25),           SquirrelID),              '-1')               AS SquirrelID,\n  COALESCE(TRY_CONVERT(VARCHAR(50),        PrimaryFurColor),         'Unknown')         AS PrimaryFurColor,\n  COALESCE(TRY_CONVERT(VARCHAR(50),        HighlightsInFurColor),    'Unknown')         AS HighlightsInFurColor,\n  COALESCE(TRY_CONVERT(VARCHAR(150),       ColorNotes),              'Unknown')         AS ColorNotes,\n  COALESCE(TRY_CONVERT(VARCHAR(50),        Location),                'Unknown')         AS Location,\n  COALESCE(TRY_CONVERT(INT,                AboveGroundHeight),       -1)                 AS AboveGroundHeight,\n  COALESCE(TRY_CONVERT(VARCHAR(50),        SpecificLocation),        'Unknown')         AS SpecificLocation,\n  COALESCE(TRY_CONVERT(VARCHAR(50),        Activities),              'Unknown')         AS Activities,\n  COALESCE(TRY_CONVERT(VARCHAR(50),        HumanInteractions),       'Unknown')         AS HumanInteractions,\n  COALESCE(TRY_CONVERT(VARCHAR(255),       OtherNotesObservations),  'Unknown')         AS OtherNotesObservations,\n  COALESCE(TRY_CONVERT(DECIMAL(9,6),       SquirrelLatitude),         0.00)              AS SquirrelLatitude,\n  COALESCE(TRY_CONVERT(DECIMAL(9,6),       SquirrelLongitude),        0.00)              AS SquirrelLongitude,\n  COALESCE(\n  TRY_CONVERT(DATE, [Date], 23),   -- try yyyy-mm-dd first\n  TRY_CONVERT(DATE, [Date], 101),  -- then MM/dd/yyyy\n  '1900-01-01'                     -- fallback\n)       AS ObservationDate\nFROM Bronze.SquirrelData;\n\n\nSELECT Date, COALESCE(TRY_CONVERT(DATE,              [Date], 23),               '1900-01-01')  AS Date23 FROM Bronze.SquirrelData\n\n\n  -- 4 a) How many we just loaded\n  DECLARE @RowsInserted INT = (SELECT COUNT(*) FROM Silver.SquirrelObservations);\n\n  -- 4 b) compute duration in seconds\n  DECLARE @EndTime      DATETIME2 = GETDATE();\n  DECLARE @DurationSec  INT       = DATEDIFF(SECOND, @StartTime, @EndTime);\n\n  -- 5) return both in a single row\n  SELECT \n    @RowsDeleted  AS RowsDeleted,\n    @RowsInserted AS RowsInserted,\n    @DurationSec  AS DurationSeconds;\n\nEND;\nGO",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "dspendtoenddemo",
				"poolName": "dspendtoenddemo"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}